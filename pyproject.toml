[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fio_banka"
dynamic = ["version"]
authors = [{ name = "Petr Beranek", email = "petrberanek.mail@gmail.com" }]
description = "Fio Banka API Client"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.11"
keywords = ["finance", "fio", "bank", "api", "czech", "wrapper"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Financial and Insurance Industry",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Topic :: Communications",
  "Topic :: Office/Business :: Financial",
]
dependencies = [
  "requests~=2.31", # manually sync with mypy deps in .pre-commit-config.yaml
]

[project.urls]
Homepage = "https://github.com/peberanek/fio-banka"

[project.optional-dependencies]
devel = [
  "pre-commit~=3.3",
  "pytest~=7.3",
  "pytest-cov~=4.1",
  "types-requests~=2.31",
]

[tool.setuptools_scm]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=fio_banka --cov-report term-missing"

[tool.ruff]
line-length = 100
# https://beta.ruff.rs/docs/rules/
select = [
  "F",   # pyflakes
  "E",   # pycodestyle
  "C90", # mccabe
  "I",   # isort
  "N",   # pep8-naming
  "D",   # pydocstyle
  "UP",  # pyupgrade
  "YTT", # flake8-2020
  "S",   # flake8-bandit
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "COM", # flake8-commas
  "C4",  # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "T20", # flake8-print
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "PGH", # pygrep-hooks
  "PL",  # pylint
  "TRY", # tryceptors
  "FLY", # flynt
  "RUF", # Ruff-specific rules
]
ignore = ["TRY003"]
unfixable = [
  # These may break temporarily commented-out code
  "F401",
  "F841",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["D", "S"]

[tool.ruff.pydocstyle]
convention = "google"
